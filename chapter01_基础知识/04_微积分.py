# 还记得割圆法来求的无理数π的吗？这种逼近的思想就是积分的起源，也是积分的基础。
# 通常在拟合一个模型的时候，我们主要关心以下两个问题：
# 1.优化（optimization）：用模型拟合观测数据的过程。
# 2.泛化（generalization）：根据数学原理或者实践者的思想判断，来知道我们生成模型--这些模型的有效性通常超出了用于训练数据集本身的需求。


# 导数与微分
# 导数的定义本身是一种极限。了解导数的计算，是深度学习优化算法的关键步骤，常用于损失函数的调整。
# 回忆1：当某个参数增加很小的一部分，对整体结果的影响。
# 回忆2：可微=>可导=>连续=>可积。

import numpy as np
# matplotlib是一个py中常见的可视化库，而%matplotlib inline 是一个魔法函数。
# 所谓的魔法函数，指的是py中的一种高级语法，允许你在类中自定义函数，并绑如类的特殊方法。魔法函数的格式名一般是__xxx__，名字带有下划线的函数大概率是魔法函数。
from matplotlib_inline import backend_inline

# 定义u=f(x)=3x²-4x
def f(x):
    return 3*x**2-4*x
# 定义一个函数用于求极限
def numerical_lim(f,x,h):
    return (f(x+h)-f(x))/h

# 接下来开始运算吧

